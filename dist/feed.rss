<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>博文</title>
        <link>localhost/blog</link>
        <description>✍️</description>
        <lastBuildDate>Fri, 02 Feb 2024 17:36:47 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[dl_model_deploy]]></title>
            <link>localhost/blog/blog/posts/2024/dl_model_deploy.html</link>
            <guid>localhost/blog/blog/posts/2024/dl_model_deploy.html</guid>
            <pubDate>Tue, 30 Jan 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<p>此处直接写前言, 所谓的前言就是写这篇文章的目的?
什么情况想到了做这件事情, 然后才开始标题和引言. 也可以作为一个小分段了</p>
<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/iShot_2024-01-26_13.41.29.png" alt="">
这就是我想要的效果, 图片可以自动的上传到对应的位置, 并且不会受影响, 很方便的进行更新内容.
模型部署的情况</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[以撒目标检测]]></title>
            <link>localhost/blog/blog/posts/2024/isaac_object_detection.html</link>
            <guid>localhost/blog/blog/posts/2024/isaac_object_detection.html</guid>
            <pubDate>Tue, 30 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>上篇文章把《以撒的结合》道具/饰品图片识别的做出来了, 能用是能用, 但是使用场景比较狭隘, 还需要拍照和截图, 得部署到移动设备+编写应用的形式才可以比较好体验, 短期内不太想搞移动app. 于是就想着要不练一个目标检测的模型, 然后通过直接截取应用视频流的形式, 实时/小延时的对画面进行推理和检测, 以<strong>外挂</strong>的形式注入游戏中, 增强体验.<br>
于是就诞生了本文《以撒的结合》目标检测 😃</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>上篇文章把《以撒的结合》道具/饰品图片识别的做出来了, 能用是能用, 但是使用场景比较狭隘, 还需要拍照和截图, 得部署到移动设备+编写应用的形式才可以比较好体验, 短期内不太想搞移动app. 于是就想着要不练一个目标检测的模型, 然后通过直接截取应用视频流的形式, 实时/小延时的对画面进行推理和检测, 以<strong>外挂</strong>的形式注入游戏中, 增强体验.<br>
于是就诞生了本文《以撒的结合》目标检测 😃</p>
<hr>
<h2 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">&ZeroWidthSpace;</a></h2>
<p>就是实时/小延迟的目标检测需求, 然后需要截取视频流的.</p>
<h2 id="模型选择" tabindex="-1">模型选择 <a class="header-anchor" href="#模型选择" aria-label="Permalink to &quot;模型选择&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="数据准备" tabindex="-1">数据准备 <a class="header-anchor" href="#数据准备" aria-label="Permalink to &quot;数据准备&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="模型训练" tabindex="-1">模型训练 <a class="header-anchor" href="#模型训练" aria-label="Permalink to &quot;模型训练&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="验证结果" tabindex="-1">验证结果 <a class="header-anchor" href="#验证结果" aria-label="Permalink to &quot;验证结果&quot;">&ZeroWidthSpace;</a></h2>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[以撒道具/饰品图像识别]]></title>
            <link>localhost/blog/blog/posts/2024/Isaac_image_recognition.html</link>
            <guid>localhost/blog/blog/posts/2024/Isaac_image_recognition.html</guid>
            <pubDate>Mon, 29 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/自定义训练数据图像识别-2024-01-29.png" alt="">
最近在玩《以撒的结合:忏悔》, ns版本. 游戏确实上头好玩, 内容很多. 但是游玩下来遇到一个纠结头疼的问题就是, 道具/ 装备 有时候捡起来后的效果, 还不如不捡. 装备/道具只会在捡起来的时候才能看到道具和状态是什么, 甚至, 有时候捡起来后描述也看不出这个道具到底能用来干嘛,  魂系叙事那一套......虽然也找到不错的<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a>, 但是, 站点只能文字搜索, 再加上其道具和饰品加起来总数量有900多个, 相当于ImageNet的种类了.
于是就想到, 干脆做一个“以撒道具图像识别功能” 好了, 优化体验: ) .</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/自定义训练数据图像识别-2024-01-29.png" alt="">
最近在玩《以撒的结合:忏悔》, ns版本. 游戏确实上头好玩, 内容很多. 但是游玩下来遇到一个纠结头疼的问题就是, 道具/ 装备 有时候捡起来后的效果, 还不如不捡. 装备/道具只会在捡起来的时候才能看到道具和状态是什么, 甚至, 有时候捡起来后描述也看不出这个道具到底能用来干嘛,  魂系叙事那一套......虽然也找到不错的<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a>, 但是, 站点只能文字搜索, 再加上其道具和饰品加起来总数量有900多个, 相当于ImageNet的种类了.
于是就想到, 干脆做一个“以撒道具图像识别功能” 好了, 优化体验: ) .</p>
<hr>
<BabyPulm /><h1 id="自定义训练数据图像识别" tabindex="-1">自定义训练数据图像识别 <a class="header-anchor" href="#自定义训练数据图像识别" aria-label="Permalink to &quot;自定义训练数据图像识别&quot;">&ZeroWidthSpace;</a></h1>
<p>得益于各种深度学习框架的发展, 现在训练一个模型变得非常简单, 于是我就决定直接用<code>pytorch</code>来完成这个图片识别的任务了.  考虑到以撒的道具装备这类东西图像数据是非常<strong>垂直领域</strong>了, 所以我需要准备对应的训练数据进行模型的训练.</p>
<h1 id="数据准备" tabindex="-1">数据准备 <a class="header-anchor" href="#数据准备" aria-label="Permalink to &quot;数据准备&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="数据获取-数据合成" tabindex="-1">数据获取&amp;数据合成 <a class="header-anchor" href="#数据获取-数据合成" aria-label="Permalink to &quot;数据获取&amp;数据合成&quot;">&ZeroWidthSpace;</a></h2>
<p>从<a href="https://isaac.huijiwiki.com/wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noreferrer">以撒的结合中文维基</a> 编写爬虫把道具/装备的图片数据, 描述都抓取下来.<br>
爬虫比较简单, 主要就是图片爬取的时候, 需要从css中把sprite图子图的x, y提取出来, 然后自行使用sprite划分独立的道具图. 下图为css和html标签中抽取出来的信息</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">collectibles_001</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">x</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">y</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">The Sad Onion</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">zh</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">悲伤洋葱</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">level</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">道具</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">level2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">3</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">?</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">desc</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">new_id</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">image</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./cus_data/0.png</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD"> ...</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 提取出每个道具的图片和其他属性</span></span></code></pre>
</div><p>然后把图片分割后某个目录, 此处我是把裁切好的图片存放在 <code>./cus_data</code>下. 并且把图片. 整理后得到训练的类别标签备用.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&gt;&gt;&gt;</span><span style="color: #A6ACCD">classes</span></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">悲伤洋葱:射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">内眼:角色每次发射3颗泪弹。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">弯勺魔术:角色的泪弹获得追踪效果。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">柯吉猫的头:泪弹变大，击退效果上升，伤害上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">我的镜像:角色的泪弹会飞回角色身边。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">小号:射程下降，射速上升。</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD"> ...</span></span></code></pre>
</div><p>此处我把图片裁剪下来的32x32大小的图片保存为合成训练数据的元数据, 因为是像素风格, 所以哪怕所缩小了,只要不使用平滑, 那还是非常清晰的.
<img src="./pic/自定义训练数据图像识别-像素风格-2024-01-29.png" alt=""><br>
(数据获得和处理完整代码在末尾的引用中会给出链接.)</p>
<h2 id="数据增强" tabindex="-1">数据增强 <a class="header-anchor" href="#数据增强" aria-label="Permalink to &quot;数据增强&quot;">&ZeroWidthSpace;</a></h2>
<p>实际的预测情况都伴随着各种各样的背景干扰,  所以这边需要在合成训练数据的时候, 也需要让这些元图标拥有各种各样的背景.
<img src="./pic/自定义训练数据图像识别-数据合成多背景-2024-01-29.png" alt="">
另一方面, 考虑到一个场景就是使用摄像头的拍照的时候, 可能会有的一些图像的畸变和变形等. transform中也需要配置数据增强的操作, 包括但不限于, 抖动, 明暗度变化等.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transforms </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ToTensor</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 先直接配置一个用来计算 数据均值和标准差,以方便正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 配置初始的dataloader用于遍历和计算均值和标准差</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">io </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> read_image</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">Dataset</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">img_sort_files</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">                 </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=None,</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #A6ACCD; font-style: italic">target_transform</span><span style="color: #89DDFF">=None):</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> img_sort_files</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 自定义标签关系, 此处需要排好序的</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_dir</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> img_dir</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">transform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transform</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target_transform</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> target_transform</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__len__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__getitem__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">idx</span><span style="color: #89DDFF">):</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 作用是获得label 和 item 即可</span></span>
<span class="line"><span style="color: #A6ACCD">        filename </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_labels</span><span style="color: #89DDFF">[</span><span style="color: #F07178">idx</span><span style="color: #89DDFF">]</span><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        img_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">img_dir</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> filename</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">read_image</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">img_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">mode</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">io</span><span style="color: #89DDFF">.</span><span style="color: #F07178">image</span><span style="color: #89DDFF">.</span><span style="color: #F07178">ImageReadMode</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RGB</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        label </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">filename</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">transform</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">            image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">target_transform</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">            label </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">target_transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">label</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> image</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> label</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">from_dir </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listdir</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> need_move_images </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">need_move_images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sort</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">=</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span><span style="color: #C792EA">:03d</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&quot;</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">train_dataset </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">img_sort_files</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">                                    </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## dataloader</span></span>
<span class="line"><span style="color: #A6ACCD">train_dataloader </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">DataLoader</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataset</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">batch_size</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">batch_size</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">shuffle</span><span style="color: #89DDFF">=True)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 获取图片数据的 归一化数值</span></span>
<span class="line"><span style="color: #A6ACCD">global_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[]</span></span>
<span class="line"><span style="color: #A6ACCD">global_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[]</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> images</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> train_dataloader</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">    numpy_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">numpy</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    batch_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">numpy_image</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    batch_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">std</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">numpy_image</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    global_mean</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">batch_mean</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    global_std</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">batch_std</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">global_mean </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_mean</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">global_std </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> np</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_std</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">axis</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_mean</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">global_std</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><p>再次根据得到的均值和标准差更新训练用的dataloader</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transforms </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> ToTensor</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">RandomAffine</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">degrees</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">translate</span><span style="color: #89DDFF">=None,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">scale</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">0.9</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">shear</span><span style="color: #89DDFF">=None),</span><span style="color: #82AAFF">  </span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #676E95; font-style: italic"># 随机放大或者缩小一点点</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #676E95; font-style: italic"># 增加噪声, 防止过拟合</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ColorJitter</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">brightness</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">contrast</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">saturation</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">hue</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 抖动图像的亮度、对比度、饱和度和色相</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Normalize</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            global_mean</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            global_std</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 对图片数据做正则化</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">train_dataset </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">IssacCustomDatasets</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">need_move_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">img_dir</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">new_cus_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">transform</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">transform</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## dataloader</span></span>
<span class="line"><span style="color: #A6ACCD">train_dataloader </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">DataLoader</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataset</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">batch_size</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">batch_size</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">                              </span><span style="color: #A6ACCD; font-style: italic">shuffle</span><span style="color: #89DDFF">=True)</span></span></code></pre>
</div><h1 id="训练模型" tabindex="-1">训练模型 <a class="header-anchor" href="#训练模型" aria-label="Permalink to &quot;训练模型&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="自定义模型" tabindex="-1">自定义模型 <a class="header-anchor" href="#自定义模型" aria-label="Permalink to &quot;自定义模型&quot;">&ZeroWidthSpace;</a></h2>
<p>因为图片识别任务输入的图片比较简单, 所以我这儿直接用vgg16来训练一个小模型就可以了. 原版的vgg16是基于244x244的ImageNet的图片输入, 此处我通过继承调整了池化层的7x7的特征图的输入, 以让他支持32x32的输入还有最后的全连接层的输出.</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torch </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> nn</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">models </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> vgg16</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">optim</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> optim</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> numpy </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">device </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cuda</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">is_available</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mps</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">backends</span><span style="color: #89DDFF">.</span><span style="color: #F07178">mps</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">is_available</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cpu</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;Using </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">device</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D"> device&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">total_classes </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">list</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">set</span><span style="color: #89DDFF">([</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> need_move_images</span><span style="color: #89DDFF">]))</span></span>
<span class="line"><span style="color: #A6ACCD">total_classes_num </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">total_classes</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## 大批量测试</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> matplotlib </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> pyplot </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> plt</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">utils </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> make_grid</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #FFCB6B">nn</span><span style="color: #89DDFF">.</span><span style="color: #FFCB6B">Module</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #FFCB6B">super</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">__init__</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        model </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">vgg16</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">pretrained</span><span style="color: #89DDFF">=True)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 可以选择False 和True </span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">features</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> model</span><span style="color: #89DDFF">.</span><span style="color: #F07178">features</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 只取了feature</span></span>
<span class="line"><span style="color: #A6ACCD">        self</span><span style="color: #89DDFF">.</span><span style="color: #F07178">classifier</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Sequential</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">512</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 修改此处的第一个参数用来适配64*64</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ReLU</span><span style="color: #89DDFF">(True),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ReLU</span><span style="color: #89DDFF">(True),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(),</span></span>
<span class="line"><span style="color: #82AAFF">            nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">4096</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> num_classes</span><span style="color: #89DDFF">),</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">forward</span><span style="color: #89DDFF">(</span><span style="color: #F07178; font-style: italic">self</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">features</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">view</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">        x </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">classifier</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> x</span></span></code></pre>
</div><h2 id="训练识别模型" tabindex="-1">训练识别模型 <a class="header-anchor" href="#训练识别模型" aria-label="Permalink to &quot;训练识别模型&quot;">&ZeroWidthSpace;</a></h2>
<p>使用多个不同背景合成的训练数据和数据增强后, 我们获得了 10872 的总训练数据, 921个类. 然后就可以进行相关的训练了. (数据量实在不算太多, 所以偷懒直接回抽样训练数据验证好了)</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">%%</span><span style="color: #A6ACCD">time</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 训练模型</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">net </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">total_classes_num</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这次训练64 * 64的版本</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">criterion </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CrossEntropyLoss</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">optimizer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> optim</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Adam</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parameters</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">lr</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.0001</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">weight_decay</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.01</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 加入了l2正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">check_iter </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># train check batch size </span></span>
<span class="line"><span style="color: #A6ACCD">train_epoch </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">25</span></span>
<span class="line"><span style="color: #A6ACCD">prefix </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;20240128_full_32x32_clear_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">total_classes_num</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">class_l2_2-&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">batch_size</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> batch_size</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_epoch</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">train</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每个epoch 后切换训练模式, 那么会不会保d留之前的训练权重呢?</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    progress_bar </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data  </span><span style="color: #676E95; font-style: italic"># 必须要float 归一化? 浮点类型.</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">zero_grad</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这一步, 运行有问题, 这是为什么呢, 检查一下图片格式</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        loss </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">criterion</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        loss</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">backward</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">step</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        progress_bar</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set_description</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch:</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, loss: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">loss </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> batch_size</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF">%</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每两个epoch进行一次验证</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">开始验证....</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        correct </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 记录正确预测的数量</span></span>
<span class="line"><span style="color: #A6ACCD">        total </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 总的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">no_grad</span><span style="color: #89DDFF">():</span></span>
<span class="line"><span style="color: #A6ACCD">            </span></span>
<span class="line"><span style="color: #A6ACCD">            progress_bar2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar2</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">                    </span><span style="color: #89DDFF; font-style: italic">break</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">.</span><span style="color: #F07178">data</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">                total </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 实际的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">                correct </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">predicted </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 正确预测的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        accuracy </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">correct </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> total </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 计算准确率</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, Accuracy: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">accuracy</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> accuracy </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 太小的根本没比较保存</span></span>
<span class="line"><span style="color: #A6ACCD">            save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_vgg16_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">            torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">empty_cache</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Finished Training</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_vgg16_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><h1 id="验证训练成果" tabindex="-1">验证训练成果 <a class="header-anchor" href="#验证训练成果" aria-label="Permalink to &quot;验证训练成果&quot;">&ZeroWidthSpace;</a></h1>
<p>经过多次训练验证, 最终设置25epoch, 每轮保存结果后, 得到了多个90以上准确率的结果, 这之后我还让他训练了额外的10轮, 但是准确率都没有再提升,反而突下降了, 说明后续更多的epoch就是过拟合了, 不需要再增加轮数.<br>
最终我才用了16 epoch的模型结果:</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">epoch: 16, Accuracy: 98.001</span></span>
<span class="line"><span style="color: #A6ACCD">model save:  20240128_full_32x32_clear_906class_l2_2-_vgg16_16_98.001.pth</span></span></code></pre>
</div><h2 id="验证代码" tabindex="-1">验证代码 <a class="header-anchor" href="#验证代码" aria-label="Permalink to &quot;验证代码&quot;">&ZeroWidthSpace;</a></h2>
<p>读取模型, 并且使用手机拍照的截图, 并使用真实图片进行验证:</p>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">20240128_full_32x32_clear_906class_l2_2-_vgg16_16_98.001.pth</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这个效果也不错 19, 看第一/第二个</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">model </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">VGG16_S</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">num_classes</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">total_classes_num</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">load_state_dict</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">load</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">model_path</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">class_index</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> label_dict</span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">class_index</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">eval_predict</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">model</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">image_path</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">read_image</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image_path</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">mode</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">io</span><span style="color: #89DDFF">.</span><span style="color: #F07178">image</span><span style="color: #89DDFF">.</span><span style="color: #F07178">ImageReadMode</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RGB</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    inner_transform </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Compose</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">[</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Resize</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">)),</span><span style="color: #82AAFF"> </span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">ColorJitter</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">brightness</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">contrast</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">saturation</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            </span><span style="color: #A6ACCD; font-style: italic">hue</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.1</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 抖动图像的亮度、对比度、饱和度和色相</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Lambda</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">lambda</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">x</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> x</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">()),</span></span>
<span class="line"><span style="color: #82AAFF">        transforms</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Normalize</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">            global_mean</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #82AAFF">            global_std</span></span>
<span class="line"><span style="color: #82AAFF">        </span><span style="color: #89DDFF">)</span><span style="color: #82AAFF">  </span><span style="color: #676E95; font-style: italic"># 对图片数据做正则化</span></span>
<span class="line"><span style="color: #82AAFF">    </span><span style="color: #89DDFF">])</span></span>
<span class="line"><span style="color: #A6ACCD">    model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    timg </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">inner_transform</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">image</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    timg </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> timg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    timg1 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> timg</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">unsqueeze</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    result </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">model</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">timg1</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">result</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">predicted</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">())</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #A6ACCD"> result</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted```</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">## 验证结果可视化   </span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">推理</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 并且得到前10个最像的类型</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 优化用户体验</span><span style="color: #89DDFF">.</span><span style="color: #F07178"> 因为训练数据有限</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> 所以才用增加召回数量和显示各个种类识别率的形式给用户选择</span><span style="color: #89DDFF">.</span><span style="color: #F07178">毕竟</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">本质是方便用户识别道具类型</span><span style="color: #89DDFF">.</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #A6ACCD">```python</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #F07178">functional</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">as</span><span style="color: #A6ACCD"> F</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> PIL </span><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ImageDraw</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> ImageFont</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">real_test_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">i </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listdir</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cus_test_data/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">find</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">.</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">!=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">real_test_images</span><span style="color: #89DDFF">))</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> t_image_path </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> real_test_images</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">real label: </span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> image_path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">split</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)[-</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">])</span><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    t_image_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> os</span><span style="color: #89DDFF">.</span><span style="color: #F07178">path</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">join</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">cus_test_data</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    t_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    t_image </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> t_image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resize</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    result</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">eval_predict</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">model</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> t_image_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    probabilities </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> F</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">softmax</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">result</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">dim</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    values</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> indices </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">topk</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">probabilities</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    match_images </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #A6ACCD">t_image</span><span style="color: #89DDFF">]</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> p</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">zip</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">values</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> indices</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">].</span><span style="color: #82AAFF">tolist</span><span style="color: #89DDFF">()):</span></span>
<span class="line"><span style="color: #A6ACCD">        data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">get_real_label</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">i</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D"> </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">zh</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">]</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">p</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">)</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">%&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        match_img </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Image</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">image</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 创建一个可以在给定图像上绘图的对象</span></span>
<span class="line"><span style="color: #A6ACCD">        draw </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> ImageDraw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Draw</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_img</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 字体颜色</span></span>
<span class="line"><span style="color: #A6ACCD">        font_color </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">232</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">98</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">85</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 绘制文本</span></span>
<span class="line"><span style="color: #A6ACCD">        draw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">text</span><span style="color: #89DDFF">((</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">*</span><span style="color: #82AAFF">p</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">%&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">fill</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">font_color</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        match_images</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_img</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">plot_images</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">match_images</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">figsize</span><span style="color: #89DDFF">=(</span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">10</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">----------------------------------------------</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><p><img src="./pic/自定义训练数据图像识别-验证真实结果-2024-01-29.png" alt="">
<img src="./pic/自定义训练数据图像识别-结果可视化-2024-01-29.png" alt="">
<img src="./pic/自定义训练数据图像识别-结果总结-2024-01-29.png" alt=""></p>
<h1 id="换用resnet网络训练对比" tabindex="-1">换用ResNet网络训练对比 <a class="header-anchor" href="#换用resnet网络训练对比" aria-label="Permalink to &quot;换用ResNet网络训练对比&quot;">&ZeroWidthSpace;</a></h1>
<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">%%</span><span style="color: #A6ACCD">time</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 训练模型</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 加载ResNet101模型</span></span>
<span class="line"><span style="color: #A6ACCD">net </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torchvision</span><span style="color: #89DDFF">.</span><span style="color: #F07178">models</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resnet101</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">pretrained</span><span style="color: #89DDFF">=True)</span></span>
<span class="line"><span style="color: #A6ACCD">num_features </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> net</span><span style="color: #89DDFF">.</span><span style="color: #F07178">fc</span><span style="color: #89DDFF">.</span><span style="color: #F07178">in_features</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 增加 dropout</span></span>
<span class="line"><span style="color: #A6ACCD">net</span><span style="color: #89DDFF">.</span><span style="color: #F07178">fc</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Sequential</span><span style="color: #89DDFF">(</span></span>
<span class="line"><span style="color: #82AAFF">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Dropout</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0.5</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF">   </span><span style="color: #676E95; font-style: italic"># 增加 dropout避免太快过拟合</span></span>
<span class="line"><span style="color: #82AAFF">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Linear</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">num_features</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> total_classes_num</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"># 单层卷积, 替代了vgg的4096个全连接层,深,但是速度还更快</span></span>
<span class="line"><span style="color: #A6ACCD">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">model</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 验证模块</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">criterion </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> nn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CrossEntropyLoss</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">optimizer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> optim</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Adam</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parameters</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">lr</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.0001</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">weight_decay</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">0.01</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 加入了l2正则化</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">check_iter </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># train check batch size </span></span>
<span class="line"><span style="color: #A6ACCD">train_epoch </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">25</span></span>
<span class="line"><span style="color: #A6ACCD">prefix </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;20240201_full_32x32_clear_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">total_classes_num</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">class_l2_2-&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">batch_size</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> batch_size</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">range</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_epoch</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">    net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">train</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每个epoch 后切换训练模式, 那么会不会保d留之前的训练权重呢?</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    progress_bar </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data  </span><span style="color: #676E95; font-style: italic"># 必须要float 归一化? 浮点类型.</span></span>
<span class="line"><span style="color: #A6ACCD">        inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">zero_grad</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 这一步, 运行有问题, 这是为什么呢, 检查一下图片格式</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">        loss </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">criterion</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> labels</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        loss</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">backward</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        optimizer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">step</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        progress_bar</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set_description</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch:</span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, loss: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">loss </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> batch_size</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> epoch </span><span style="color: #89DDFF">%</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 每两个epoch进行一次验证</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">开始验证....</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">eval</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #A6ACCD">        correct </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 记录正确预测的数量</span></span>
<span class="line"><span style="color: #A6ACCD">        total </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 总的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">with</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">no_grad</span><span style="color: #89DDFF">():</span></span>
<span class="line"><span style="color: #A6ACCD">            </span></span>
<span class="line"><span style="color: #A6ACCD">            progress_bar2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">tqdm</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">enumerate</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #A6ACCD; font-style: italic">total</span><span style="color: #89DDFF">=</span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #A6ACCD"> i</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #A6ACCD"> progress_bar2</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> i </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">int</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">len</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">train_dataloader</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0.4</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #A6ACCD">                    </span><span style="color: #89DDFF; font-style: italic">break</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> data</span></span>
<span class="line"><span style="color: #A6ACCD">                inputs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> labels </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> inputs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">float</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">),</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">to</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">device</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                outputs </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">inputs</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">                _</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> predicted </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">max</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">outputs</span><span style="color: #89DDFF">.</span><span style="color: #F07178">data</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">                total </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">size</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 实际的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">                correct </span><span style="color: #89DDFF">+=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD">predicted </span><span style="color: #89DDFF">==</span><span style="color: #A6ACCD"> labels</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">item</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 正确预测的样本数</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">        accuracy </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">round</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">correct </span><span style="color: #89DDFF">/</span><span style="color: #82AAFF"> total </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">100</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">3</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 计算准确率</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&#39;epoch: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">, Accuracy: </span><span style="color: #F78C6C">{</span><span style="color: #82AAFF">accuracy</span><span style="color: #C792EA">:.3f</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> accuracy </span><span style="color: #89DDFF">&gt;=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">60</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">  </span><span style="color: #676E95; font-style: italic"># 太小的根本没比较保存</span></span>
<span class="line"><span style="color: #A6ACCD">            save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_resnet101_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">            torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #A6ACCD">    torch</span><span style="color: #89DDFF">.</span><span style="color: #F07178">cuda</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">empty_cache</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Finished Training</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">save_model_path </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">prefix</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_resnet101_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">epoch</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">_</span><span style="color: #F78C6C">{</span><span style="color: #A6ACCD">accuracy</span><span style="color: #F78C6C">}</span><span style="color: #C3E88D">.pth&quot;</span></span>
<span class="line"><span style="color: #A6ACCD">torch</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">save</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">net</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">state_dict</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">&quot;model save: &quot;</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> save_model_path</span><span style="color: #89DDFF">)</span></span></code></pre>
</div><h2 id="resnet模型验证" tabindex="-1">ResNet模型验证 <a class="header-anchor" href="#resnet模型验证" aria-label="Permalink to &quot;ResNet模型验证&quot;">&ZeroWidthSpace;</a></h2>
<p>得益于<code>ResNet</code>采用了跳跃链接, 损失值能够更好的在更深的网络中进行传递, 表现的效果就是训练更容易收敛了.</p>
<p>训练的输出如下, 可以看到resnet的收敛速度极快, 10个epoch以内就可以达到90%的准确率,, 而vggNet则要接近10个epoch是远远没法达到90%准确率的.<br>
ResNet准确性更高, 所以如果是实际应用产品的话, 可以直接不用管古老的历史包袱了, vgg当然也有它的标志性意义. 但是真实省事, 确实直接选模型挑选新一点的, 会少一些坑. 🤔</p>
<div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">epoch:4,</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">loss:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0.005</span><span style="color: #C3E88D">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span><span style="color: #C3E88D">%</span><span style="color: #89DDFF">|</span><span style="color: #FFCB6B">███████████████████████████████████████████████████████████████████████████████████████████████████████</span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">85/85</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">02</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">&lt;</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">,  1.95s/it</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">开始验证.</span><span style="color: #82AAFF">...</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F78C6C">100</span><span style="color: #A6ACCD">%</span><span style="color: #89DDFF">|</span><span style="color: #FFCB6B">█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████</span><span style="color: #89DDFF">|</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">34/34</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">17</span><span style="color: #89DDFF">&lt;</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">00</span><span style="color: #A6ACCD">,  1.90it/s</span><span style="color: #89DDFF">]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FFCB6B">epoch:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #C3E88D">,</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">Accuracy:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">96.507</span></span>
<span class="line"><span style="color: #FFCB6B">model</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">save:</span><span style="color: #A6ACCD">  </span><span style="color: #C3E88D">20240201_full_32x32_clear_906class_l2_2-_resnet101_4_96.507.pth</span></span></code></pre>
</div><p>载入训练后模型, 使用上面vgg16验证的代码, 进行验证, 对比后发现, 整体的泛化能力, ResNet要更好, 很多VggNet没能稳定识别的验证图片, ResNet都能比较稳定的以比较高的识别率进行识别.</p>
<h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h1>
<p>一时兴起的小需求, 也很多小细节需要处理.
大批量数据运行前, 需要先抽少一些类进行小批量的快速验证, 对模型和训练数据进行验证. 这次我就是先用20类进行验证, 之后才进行900多类的训练.</p>
<p>一开始用vgg, 用的是224x224的图片输入, 后面为了提速.因为是像素画,只要不要平滑, 32x32也足够清晰, 所以就调整vgg结构, 方便进行增加更多的batch_size进行更快的训练.及时调整了输入图片的尺寸以后, 我的电脑训练起来也快了很多, 40多分钟就可以完成25轮 128batch_size的模型训练, 体验还不错!</p>
<p>然后就是, 可以的话, 主动挑选更新的代码, 老的模型, 经典, 但是效果远不如新一些的模型.ResNet更快收敛, 更快训练(笑...)</p>
<p><a href="https://github.com/realzhengyiming/isaac_tools/blob/main/simple_issac_item_recognition-%E5%85%A8%E9%87%8F%E8%AE%AD%E7%BB%83%E7%9A%84%E7%89%88%E6%9C%AC.ipynb" target="_blank" rel="noreferrer">模型训练完整代码</a><br>
<a href="https://github.com/realzhengyiming/isaac_tools/blob/main/isaac_data_spider.py" target="_blank" rel="noreferrer">数据获取和处理的完整代码</a>
代码都在github上了.<br>
我要去玩游戏了, 以撒真好玩 : )</p>
<h2 id="后续优化" tabindex="-1">后续优化 <a class="header-anchor" href="#后续优化" aria-label="Permalink to &quot;后续优化&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>增加一下真实的截图作为训练数据, 以进一步提高各个类别的准确度</li>
<li>进一步增加一些其他的数据增强, 以更好的模拟真实的使用情况</li>
</ul>
<ul>
<li>[x] 考虑换用其他模型(resnet替换验证, 改进的模型明显更好, 历史包袱应该早日丢弃.)</li>
</ul>
<ul>
<li>部署模型到移动端, 封装成应用进行使用, 改训练目标检测模型.</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[LLM Agent 解读]]></title>
            <link>localhost/blog/blog/posts/2024/llm_agent.html</link>
            <guid>localhost/blog/blog/posts/2024/llm_agent.html</guid>
            <pubDate>Mon, 15 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="什么是llm-agent" tabindex="-1">什么是llm Agent <a class="header-anchor" href="#什么是llm-agent" aria-label="Permalink to &quot;什么是llm Agent&quot;">&ZeroWidthSpace;</a></h1>
<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/rag和agent的关系.excalidraw.png" alt="">
代理(agent)的核心思想是使用语言模型来选择要<strong>执行</strong>的<strong>一系列操作</strong>。在链中，一系列操作是硬编码的（在代码中）。在代理中，语言模型用作<strong>推理引擎</strong>，以确定要执行哪些操作以及按何种顺序执行。</p>
<p>简单的理解就是, 让llm成为大脑, 然后通过agent技术,可以让llm判断和使用工具拓展他的功能, 以达到完成复杂任务的目的.</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="什么是llm-agent" tabindex="-1">什么是llm Agent <a class="header-anchor" href="#什么是llm-agent" aria-label="Permalink to &quot;什么是llm Agent&quot;">&ZeroWidthSpace;</a></h1>
<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="./pic/rag和agent的关系.excalidraw.png" alt="">
代理(agent)的核心思想是使用语言模型来选择要<strong>执行</strong>的<strong>一系列操作</strong>。在链中，一系列操作是硬编码的（在代码中）。在代理中，语言模型用作<strong>推理引擎</strong>，以确定要执行哪些操作以及按何种顺序执行。</p>
<p>简单的理解就是, 让llm成为大脑, 然后通过agent技术,可以让llm判断和使用工具拓展他的功能, 以达到完成复杂任务的目的.</p>
<hr>
<h1 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">&ZeroWidthSpace;</a></h1>
<p>本质上就是通过多轮对话, 读取结果,解读结果, 多轮来完成确定调用意图的意思.</p>
<p>流程简单的说,有几步:</p>
<ol>
<li>用户输入问题</li>
<li>通过prompt 编写思考意图(需要llm本身能力支持), 让llm作为推理的大脑, 要求其从用户输入的自然语言中, 在工具库中选择好应该使用的工具</li>
<li>然后让llm按照预设好的格式从问题中提取出使用这个工具所需要的入参(也是通过prompt)</li>
<li>最后让exexution engine (常规算法编写的提取参数匹配和执行工具), 读取llm的参数和工具使用的选择结果, 执行结果, 并且返回给用户.</li>
</ol>
<p>exexution engine:  这个就是做字符串和调用具体功能的映射功能, 之前就卡着这儿, 不知道具体的可能性是如何做到的,  可以通过正则,或者frontmatter(看具体设计的格式).</p>
<p>让大语言模型通过json 的格式生成回答,这个就很棒, 总体的意思就是这样一个意思, 然后解析json比较简单, 所以不需要重新设计字符串格式.</p>
<p>(之前我们让llm按照我们的格式要求生成三维数据的json格式, 然后直接解析那就是三维数据了, 这其实就是 agent的思想!)</p>
<blockquote>
<p><a href="https://python.langchain.com/docs/modules/agents/" target="_blank" rel="noreferrer">Agents | 🦜️🔗 Langchain</a>
<a href="https://www.zhihu.com/question/604480991/answer/3080252928" target="_blank" rel="noreferrer">(99+ 封私信 / 80 条消息) LangChain的agent是如何把自己的函数丢给LLMs的，是prompt吗？ - 知乎 (zhihu.com)</a></p>
</blockquote>
<h1 id="思考" tabindex="-1">思考 <a class="header-anchor" href="#思考" aria-label="Permalink to &quot;思考&quot;">&ZeroWidthSpace;</a></h1>
<p><strong>问题:</strong>
为什么llm能够理解我让他以特定格式的json生成回答这种任务, 训练的时候需要特地的喂它这类json数据吗,还是不需要?</p>
<p><strong>GPT回答:</strong>
LLM可以理解并生成特定格式的JSON是因为其在训练过程中接收到的大量数据包含多样性的信息，并且使用了强大的机器学习算法来挖掘这些数据的模式。</p>
<p>这些数据可能包括各种任务，包括生成特定格式的JSON。因此，即使没有特意将“生成特定格式的JSON”作为训练任务，只要训练数据包含了足够丰富和多样的任务，LLM也能学习到这个技能。</p>
<p>遇到这类任务时，LLM会依据用户的输入，理解任务需求，并用其学习的模式生成相应格式的JSON语句，完成任务。</p>
<p>总的来说，LLM的强大主要反映在两点。首先，它的训练数据涵盖了广泛的内容，使其能够处理多样性的任务；其次，它的机器学习算法能有效利用这些数据学习了如何处理各类任务，包括生成特定格式的JSON。</p>
<h1 id="llm-agent应用" tabindex="-1">llm Agent应用 <a class="header-anchor" href="#llm-agent应用" aria-label="Permalink to &quot;llm Agent应用&quot;">&ZeroWidthSpace;</a></h1>
<p>和RAG的关系:
这种形式的一个特点就是, 目前增强的还是侧重于自然语言的任务和工作. 和<code>llm agent</code>相比,  <code>agent</code>的功能可以囊括这个, agent还可以处理非自然语言的, 类似api之类的工作. 所以看起来, agent其实可以覆盖部分RAG的概念范围.</p>
<p>所以以后非文本的任务时候就可以考虑agent, agent囊括其他工具的调用.
<img src="./pic/rag和agent的关系.excalidraw.png" alt=""></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vitepress自定义vue组件]]></title>
            <link>localhost/blog/blog/posts/2024/vitepress_use_vue_animation.html</link>
            <guid>localhost/blog/blog/posts/2024/vitepress_use_vue_animation.html</guid>
            <pubDate>Mon, 15 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<BabyPulm /><h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>前端的所见即所得, 还是很有意思的. 作为程序员, 没理由拒绝了解各种技术的机会. 这不, 这段时间看以撒的wiki看得多, 然后看到“梅糖宝宝”这个boss在网页上竟然有个动画角色, 点击还会跑, 还带交互和丰富的动画(和游戏中一样).这就让我产生了兴趣. 突然对前端控制动画的功能和原理有兴趣了.  特别是之前我还特别看过一下godot框架的动画.<br>
然后又想到, vitepress是支持自定义vue组件的, 然后动画的功能应该不需要和后端交互, 就想着干脆了解一下vue组件, 还有前端css动画. 看看能不能也给自己的vitepress博客也增加一个这样小动画组件, 感觉很有趣.</p>
]]></description>
            <content:encoded><![CDATA[<BabyPulm /><h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>前端的所见即所得, 还是很有意思的. 作为程序员, 没理由拒绝了解各种技术的机会. 这不, 这段时间看以撒的wiki看得多, 然后看到“梅糖宝宝”这个boss在网页上竟然有个动画角色, 点击还会跑, 还带交互和丰富的动画(和游戏中一样).这就让我产生了兴趣. 突然对前端控制动画的功能和原理有兴趣了.  特别是之前我还特别看过一下godot框架的动画.<br>
然后又想到, vitepress是支持自定义vue组件的, 然后动画的功能应该不需要和后端交互, 就想着干脆了解一下vue组件, 还有前端css动画. 看看能不能也给自己的vitepress博客也增加一个这样小动画组件, 感觉很有趣.</p>
<hr>
<h2 id="前端动画" tabindex="-1">前端动画 <a class="header-anchor" href="#前端动画" aria-label="Permalink to &quot;前端动画&quot;">&ZeroWidthSpace;</a></h2>
<p>之前我小研究过一下godot游戏框架, 那时候看2d游戏的动作功能, 它就是通过逐帧图片或者雪碧sprite(也是逐帧)去配置不同动作动画, 然后按照设定播放而成的实现2d角色的动画功能的.</p>
<p>经过查阅, 前端实现动画大体上也是走逐帧动画的思路.
总结起来目前有几种实现的:</p>
<ol>
<li>gif</li>
<li>js控制切换帧动画</li>
<li>css3动画</li>
<li>css动画 + js切换不同的状态</li>
<li>其它框架(基本原理是一致的, 不展开)</li>
</ol>
<h3 id="gif" tabindex="-1">gif <a class="header-anchor" href="#gif" aria-label="Permalink to &quot;gif&quot;">&ZeroWidthSpace;</a></h3>
<p>优点: 可以由视频直接转化, 互联网上拥有大量的gif, 容易获得, 成本低
缺点: 支持的颜色空间有限(最大256色), 对alpha支持差, 没法独立控制播放, 暂停</p>
<h3 id="js控制切换动画" tabindex="-1">js控制切换动画 <a class="header-anchor" href="#js控制切换动画" aria-label="Permalink to &quot;js控制切换动画&quot;">&ZeroWidthSpace;</a></h3>
<p>这个方案开始就是直接的帧动画控制了, 此处是通过, 原理是通过图片设置成background, 然后通过改变<code>background-position</code>来逐帧显示子图.
优点:兼容性好, 交互行灵活
缺点:编写不那么方便</p>
<h3 id="css3动画" tabindex="-1">CSS3动画 <a class="header-anchor" href="#css3动画" aria-label="Permalink to &quot;CSS3动画&quot;">&ZeroWidthSpace;</a></h3>
<p>css3animation主要是围绕 <code>steps(number_of_steps, direction)</code>带有了逐帧动画连续播放的功能来实现自动的播放动画. 通过读取雪碧图, 配置好每秒播放哪些关键帧, 修改 <code>background-position</code> 的值来实现帧动画的切换.
优点: 使用广泛, 兼容性好, 相比纯js, 写起来简单很多
缺点: css是固定, 只能固定播放</p>
<h3 id="css3动画-js" tabindex="-1">CSS3动画+js <a class="header-anchor" href="#css3动画-js" aria-label="Permalink to &quot;CSS3动画+js&quot;">&ZeroWidthSpace;</a></h3>
<p>这两种组合起来就几乎能灵活的满足复杂的动作变化的需求了. 比如<code>idle</code>, <code>move</code>, <code>attack</code>三种动作, 只需要先通过CSS3配置好不同逐帧动画的<code>className</code>. 然后再通过js编写不同的触发器, 通过触发器改变动画标签的<code>className</code>的值, 就可以实现流畅方便的复杂动画的组合和变化. 此次wiki上看到那种就是使用这种方法.</p>
<h2 id="vue组件" tabindex="-1">vue组件 <a class="header-anchor" href="#vue组件" aria-label="Permalink to &quot;vue组件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>Vue (发音为 /vjuː/，类似 <strong>view</strong>) 是一款用于构建用户界面的 JavaScript 框架。它基于标准 HTML、CSS 和 JavaScript 构建，并提供了一套声明式的、组件化的编程模型，帮助你高效地开发用户界面。无论是简单还是复杂的界面，Vue 都可以胜任。   ---  vue 官方介绍</p>
</blockquote>
<p>之所以看这个是因为vitepress博客是基于vue的, 并且支持使用vue去自定义和拓展页面的功能, 所以也需要了解一下这个(本人非前端专业).</p>
<p>用我消化后的理解讲, vue是其中一种可以方便的把<code>html</code>, <code>js</code>,<code>css</code> “封装”成类似小模块的代码形式, 方便了复杂前端项目的维护和管理的一个前端框架. vue组件就是vue封装子模块的子模块的叫法.  了解到此, 感觉就够用了, 也觉得非常棒, 可以更加方便的管理和使用自己的编写好的小功能/样式/组件了, 确实好用.</p>
<h2 id="编写vue组件动画代码" tabindex="-1">编写Vue组件动画代码 <a class="header-anchor" href="#编写vue组件动画代码" aria-label="Permalink to &quot;编写Vue组件动画代码&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="提取静态资源-整理html代码" tabindex="-1">提取静态资源&amp;整理html代码 <a class="header-anchor" href="#提取静态资源-整理html代码" aria-label="Permalink to &quot;提取静态资源&amp;整理html代码&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>免责声明</strong>: 只用于分享和学习, 不用与盈利.<br>
因为我很喜欢&quot;梅糖宝宝&quot;这个角色, 所以接下来的演示, 我直接从wiki上把帧动画的雪碧图和资源扣下来进行用了.😆</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">text/css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./animate.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">z-index:1000;position: absolute; left: 0px; top: 0px; transform: translate(400.484px, 400.938px);</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;&quot;</span><span style="color: #89DDFF">  </span></span>
<span class="line"><span style="color: #89DDFF">     </span><span style="color: #C792EA">onclick</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #82AAFF">change_status</span><span style="color: #C3E88D">()</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum_anim baby_plum_anm_Idle</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">position: absolute; left: 0px; top: 0px;</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> isIdle </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 判断是否是静候  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> isClick </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> babyPlumAnimElement </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseover</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">//鼠标悬停就打招呼, 不然就idel  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseout</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">change_status</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">className</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum_anim</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">status</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">className</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">status</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 如果不是就执行移动的操作, 随机移动到某个位置上, 执行 attack  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">setTimeout</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #F07178">)  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 移动到新的坐标以后, 才停止这个动画, 转换回 idle  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">babyPlumAnimElement</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">classList</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;  </span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>此处我简单的抽取了雪碧图, 抽取了<code>idle</code>, <code>attack</code>, <code>hello</code> css3 className对应的代码, 并且编写监听器, 配置好了3个不同的动作交互. 然后直接浏览器中打开.</p>
<p><img src="./pic/vitepress_use_vue_animation-baby-plum.png" alt=""></p>
<p>😆正常工作, 获得一只会动的梅糖宝宝. 然后再把它改写成vue组件的形式.</p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mainDivStyles</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">changeStatus</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">baby_plum</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">[&#39;baby_plum_anim&#39;, babyPlumClass]</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:style</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">babyPlumStyles</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@mouseover</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseoverHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">  </span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #C792EA">@mouseout</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">mouseoutHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">@animationend</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">animationEndHandler</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 点击后生成新的坐标位置, 随机  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">data</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      isIdle</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      isClick</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      babyPlumClass</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      mainDivStyles</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        zIndex</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        position</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">absolute</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        left</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        top</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        transform</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">translate(100.484px, 200.938px)</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        transition</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">transform 2s</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 定义动画效果  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      babyPlumStyles</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        position</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">absolute</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        left</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        top</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      targetPosition</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> x</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">100.484</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> y</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">200.938</span><span style="color: #F07178"> </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 结束动画后的目标位置  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">};</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">methods</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mouseoverHandler</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_HelloLoop</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">mouseoutHandler</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">changeStatus</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Attack1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #676E95; font-style: italic">// 1 更新目标位置，然后修改transform效果  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">x</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerWidth</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #F78C6C">128</span><span style="color: #F07178"> </span><span style="color: #89DDFF">/</span><span style="color: #F07178"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span><span style="color: #676E95; font-style: italic">// 将目标坐标设为新的位置  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">y</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerHeight</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #F78C6C">128</span><span style="color: #F07178"> </span><span style="color: #89DDFF">/</span><span style="color: #F07178"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span><span style="color: #676E95; font-style: italic">// 将目标坐标设为新的位置  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">mainDivStyles</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">transform</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">translate(</span><span style="color: #89DDFF">${</span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">x</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">px, </span><span style="color: #89DDFF">${</span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">targetPosition</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">y</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">px)</span><span style="color: #89DDFF">`</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">setTimeout</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">babyPlumClass</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">baby_plum_anm_Idle</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isIdle</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">isClick</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">};</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">style</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">scoped</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">@import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./animate.css</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">style</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>再在vitepress中全局注册, 就可以全局在markdown中使用了</p>
<div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// https://vitepress.dev/guide/custom-theme</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">h</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">@jcamp/vitepress-blog-theme</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./style.css</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> CustomBlogHeader </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./CustomBlogHeader.vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">import</span><span style="color: #A6ACCD"> BabyPulm </span><span style="color: #89DDFF; font-style: italic">from</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./baby_pulm.vue</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">Layout</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">h</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">Layout</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">      </span><span style="color: #676E95; font-style: italic">// https://vitepress.dev/guide/extending-default-theme#layout-slots</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">enhanceApp</span><span style="color: #89DDFF">({</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">app</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">router</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">siteData</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">})</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">VPBTheme</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">enhanceApp</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">router</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">siteData</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">component</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">CustomBlogHeader</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">CustomBlogHeader</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">component</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">BabyPulm</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">BabyPulm</span><span style="color: #F07178">)  </span><span style="color: #676E95; font-style: italic">// 注册自定义vue组件</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>vitepress中使用自定义vue组件也是很简单的.  添加到markdown中即可.</p>
<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">&lt;BabyPulm /&gt;</span></span></code></pre>
</div><h2 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-label="Permalink to &quot;效果展示&quot;">&ZeroWidthSpace;</a></h2>
<p>效果次文档上已经可以看到了, 此网页上飞来飞去的那只梅糖宝宝就是了 🤣. 感觉还是很有趣的.</p>
<p>相关详细代码查看本博文对应的仓库即可 :
<a href="https://github.com/realzhengyiming/YiMingBlog" target="_blank" rel="noreferrer">realzhengyiming/YiMingBlog: a... new blog again 😅 (github.com)</a></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>vue组件很好用, vitepress配合他可以实现任何功能了...</p>
<p>额外收获: 实现这个需求让我体会到了, 前端和游戏开发其实可以说是很相近的. 游戏开发, 2d游戏举例, 本质就是编写不同的控件, 然后给控件配置不同的监听事件, 以此实现各种交互动作. 拿这个动画的功能举例, 一个<code>多媒体</code>可交互对象, 那它可以说就是一个<strong>游戏</strong>了.
相关技术框架:
<a href="https://pixijs.com/" target="_blank" rel="noreferrer">PixiJS</a>
<a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron.js</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vitepress和obsidian一键舒适写文/发文]]></title>
            <link>localhost/blog/blog/posts/2024/vitepress_obsidian.html</link>
            <guid>localhost/blog/blog/posts/2024/vitepress_obsidian.html</guid>
            <pubDate>Sun, 14 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>在此之前很长时间我都折腾过好几个博客 🥲, 有django + mdui 自建博客; 有wordpress 框架博客...但是我每次回头都会发现, 一年到头没写几篇内容.
复盘一下, 总得来说来来去去都是一下这几个问题纠缠着:</p>
<ol>
<li>写作不方便: 可视化富文本编辑器实在用得难受</li>
<li>发布不方便: 只能用网页进行编辑的话, 流程繁琐</li>
<li>站点访问卡顿:(本人服务器配置是最低档)</li>
<li>习惯难以养成: 自己虽然说有写笔记的习惯, 但是并没有打开网页写文章的习惯, 加上(1,2,3的难受用户体验, 进一步在开头的热情结束后, 打消了自己写东西的热情)</li>
</ol>
]]></description>
            <content:encoded><![CDATA[<h1 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">&ZeroWidthSpace;</a></h1>
<p>在此之前很长时间我都折腾过好几个博客 🥲, 有django + mdui 自建博客; 有wordpress 框架博客...但是我每次回头都会发现, 一年到头没写几篇内容.
复盘一下, 总得来说来来去去都是一下这几个问题纠缠着:</p>
<ol>
<li>写作不方便: 可视化富文本编辑器实在用得难受</li>
<li>发布不方便: 只能用网页进行编辑的话, 流程繁琐</li>
<li>站点访问卡顿:(本人服务器配置是最低档)</li>
<li>习惯难以养成: 自己虽然说有写笔记的习惯, 但是并没有打开网页写文章的习惯, 加上(1,2,3的难受用户体验, 进一步在开头的热情结束后, 打消了自己写东西的热情)</li>
</ol>
<hr>
<p>刚好, 今年2024年开头, 我发现了一个不错的笔记应用obsidian, 初步体验下来, 我直接放弃了notion (使用notion的时候遇到了上面列出来的问题).  并且机缘巧合查阅资料之时, 也让我看到了vitepress 博客, 于是两者一拍即合, 有了新文章和这个新博客.</p>
<h1 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">&ZeroWidthSpace;</a></h1>
<p>组合的流程结构图如下:<br>
<img src="./pic/vitepress_obsidian_combine_struct.png" alt=""></p>
<h2 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">&ZeroWidthSpace;</a></h2>
<p>可以基于markdown 生成静态博客页面的简约框架, 我很喜欢他简洁朴素的主题风格. 可以清晰简洁舒适的展示markdown文章内容, 部署模式,可以build成dist静态资源. 方便部署在轻量级的服务器上.</p>
<h2 id="obsidian" tabindex="-1">Obsidian <a class="header-anchor" href="#obsidian" aria-label="Permalink to &quot;Obsidian&quot;">&ZeroWidthSpace;</a></h2>
<p>markdown的笔记应用, 很好用.然后他还支持很多插件.
此处通过电脑客户端上安装obsidian <code>shell commands</code>插件, 配置好一键执行的命令, 使用起来就可以很方便了, 我配置的命令如下:<br>
<img src="./pic/vitepress_obsidian-plus-command.png" alt="">
命令解释:
触发本地同文件夹下的vitepress对markdown进行编译, 然后提交到github上,
再开启<code>/</code>斜杠触发重新构建和push到github, 一键操作了, 非常的方便!</p>
<h2 id="github" tabindex="-1">github <a class="header-anchor" href="#github" aria-label="Permalink to &quot;github&quot;">&ZeroWidthSpace;</a></h2>
<p>github的仓库既可以作为云备份用, 也可以作为触发器, 利用其上的webhook功能, 再检测到push命令的时候, 给<code>博客服务器</code>发送webhook 信息请求. 然后触发<code>博客服务器</code>上进行拉取和更新操作.<br>
服务器上的简单webhook重启接收端, 我直接编写了一个基于flask简单服务, 功能很简单,就是提来git最新代码(博文静态文件), 然后复制到指定位置, 让nginx重载,完成更新.</p>
<h2 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx&quot;">&ZeroWidthSpace;</a></h2>
<p>作为一个高性能静态页面服务器, 用起来也是非常的简单和容易, 特别对于我这种,博客服务器配置非常低的使用者来说, 以前的wordpress/ django, 都需要安装数据库, 或者占用很多资源, 安装很多环境依赖, 有了nginx + vitepress 就不需要考虑这么多了. 直接让他处理vitepress build后的dist博客静态资源, 简直舒服.
nginx配置也很简单, 安装好后, nginx 即可启动.</p>
<div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">server</span><span style="color: #A6ACCD"> {  </span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #89DDFF"> listen </span><span style="color: #A6ACCD">80</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">   </span><span style="color: #89DDFF"> server_name </span><span style="color: #A6ACCD">[yourdomain.com](https://yourdomain.com/ </span><span style="color: #C3E88D">&quot;https://yourdomain.com&quot;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 将此处换成你的域名或者公网 IP  </span></span>
<span class="line"><span style="color: #A6ACCD">  </span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">location</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">/ </span><span style="color: #A6ACCD">{  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> root </span><span style="color: #A6ACCD">/var/www/blog/dist</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 将此处修改为你的博客静态页面存放的路径  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> index </span><span style="color: #A6ACCD">index.html</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 设定默认访问的网页文件  </span></span>
<span class="line"><span style="color: #A6ACCD">       </span><span style="color: #89DDFF"> try_files $</span><span style="color: #A6ACCD">uri </span><span style="color: #89DDFF">$</span><span style="color: #A6ACCD">uri/ </span><span style="color: #F78C6C">=404</span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic"># 按请求的URI来寻找文件，找不到则返回404  </span></span>
<span class="line"><span style="color: #A6ACCD">    }  </span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span></code></pre>
</div><p>更新推送也只需要<code>nginx -s reload</code>就可以完成.</p>
<h2 id="效果图" tabindex="-1">效果图 <a class="header-anchor" href="#效果图" aria-label="Permalink to &quot;效果图&quot;">&ZeroWidthSpace;</a></h2>
<p>斜杠命令效果图:
<img src="./pic/vitepress_obsidian-1save.png" alt=""></p>
<p>写好文章后, obsidian上快捷运行一键命令, 然后右侧提示输出, 完成build 和 push和更新文章的所有操作, 方便快捷. /1
<img src="./pic/vitepress_obsidian-push.png" alt=""></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>obsidian 写笔记/博文 --&gt; vitepress build --&gt; github --&gt; nginx.<br>
详细请查看仓库代码. 体验非常简单和舒服! 这下没有理由不输出文章了🤡hhh...</p>
<p>拓展:<br>
obsidian的<code>shell commands</code>插件可以自定义执行cmd命令. 所以,一切皆有可能, 比如后续如果有多平台的发文需求, 那直接编写好对应平台的发文的自动化代码, 然后,只需要在 <code>shell command</code>中增加一条触发命令就可以了. 真正做到, 一键写文/ 发文!</p>
<blockquote>
<p><a href="https://github.com/realzhengyiming/YiMingBlog" target="_blank" rel="noreferrer">realzhengyiming/YiMingBlog: a... new blog again</a></p>
</blockquote>
]]></content:encoded>
        </item>
    </channel>
</rss>